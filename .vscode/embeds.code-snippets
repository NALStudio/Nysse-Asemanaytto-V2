{
	"Embed without Settings": {
		"scope": "dart",
		"prefix": "Embed without Settings",
		"description": "An embed without settings injection.",
		"isFileTemplate": true,
		"body": [
			"import 'package:flutter/material.dart';",
			"import 'package:nysse_asemanaytto/embeds/embeds.dart';",
			"",
			"class ${1:MyEmbed} extends Embed {",
			"  const ${1:MyEmbed}({required super.name});",
			"",
			"  @override",
			"  EmbedWidgetMixin<${1:MyEmbed}> createEmbed(${1:MyEmbed}Settings settings) =>",
			"      ${1:MyEmbed}Widget();",
			"",
			"  @override",
			"  EmbedSettings<Embed> createDefaultSettings() => const ${1:MyEmbed}Settings();",
			"}",
			"",
			"class ${1:MyEmbed}Widget extends StatelessWidget with EmbedWidgetMixin<${1:MyEmbed}> {",
			"  ${1:MyEmbed}Widget({super.key});",
			"",
			"  @override",
			"  Widget build(BuildContext context) {",
			"    return const ColoredBox(",
			"      color: Colors.red,",
			"      child: $0Text(\"Embed\"),",
			"    );",
			"  }",
			"",
			"  @override",
			"  Duration? getDuration() => const Duration(seconds: ${4:15});",
			"",
			"  @override",
			"  void onDisable() {}",
			"",
			"  @override",
			"  void onEnable() {}",
			"}",
			"",
			"class ${1:MyEmbed}Settings extends EmbedSettings<${1:MyEmbed}> {",
			"  const ${1:MyEmbed}Settings();",
			"",
			"  @override",
			"  EmbedSettingsForm<EmbedSettings<Embed>> createForm(",
			"    covariant ${1:MyEmbed}Settings defaultSettings,",
			"  ) =>",
			"      ${1:MyEmbed}SettingsForm(",
			"          parentSettings: this, defaultSettings: defaultSettings);",
			"",
			"  @override",
			"  String serialize() {",
			"    return \"\";",
			"  }",
			"",
			"  @override",
			"  void deserialize(String serialized) {}",
			"}",
			"",
			"class ${1:MyEmbed}SettingsForm extends EmbedSettingsForm {",
			"  ${1:MyEmbed}SettingsForm({",
			"    required super.parentSettings,",
			"    required super.defaultSettings,",
			"  });",
			"",
			"  @override",
			"  Widget build(BuildContext context) {",
			"    return EmbedSettingsForm.buildNoSettingsWidget(context);",
			"  }",
			"",
			"  @override",
			"  String get displayName => \"${2:My Embed}\";",
			"",
			"  @override",
			"  Color get displayColor => ${3:Colors.white};",
			"}",
		],
	},
	"Embed with Settings": {
		"scope": "dart",
		"prefix": "Embed with Settings",
		"description": "An embed with settings injection.",
		"isFileTemplate": true,
		"body": [
			"import 'dart:convert';",
			"",
			"import 'package:flutter/material.dart';",
			"import 'package:nysse_asemanaytto/embeds/embeds.dart';",
			"import 'package:nysse_asemanaytto/settings/settings_switch_form_field.dart';",
			"",
			"class ${1:MyEmbed} extends Embed {",
			"  const ${1:MyEmbed}({required super.name});",
			"",
			"  @override",
			"  EmbedWidgetMixin<${1:MyEmbed}> createEmbed(",
			"          covariant ${1:MyEmbed}Settings settings) =>",
			"      ${1:MyEmbed}Widget(settings: settings);",
			"",
			"  @override",
			"  EmbedSettings<Embed> createDefaultSettings() =>",
			"      ${1:MyEmbed}Settings(condition: false);",
			"}",
			"",
			"class ${1:MyEmbed}Widget extends StatelessWidget",
			"    implements EmbedWidgetMixin<${1:MyEmbed}> {",
			"  final ${1:MyEmbed}Settings settings;",
			"",
			"  const ${1:MyEmbed}Widget({super.key, required this.settings});",
			"",
			"  @override",
			"  Duration? getDuration() => const Duration(seconds: ${4:15});",
			"",
			"  @override",
			"  Widget build(BuildContext context) {",
			"    return ColoredBox(",
			"      color: Colors.orange,",
			"      child: $0Text(\"Condition: ${settings.condition}\"),",
			"    );",
			"  }",
			"",
			"  @override",
			"  void onDisable() {}",
			"",
			"  @override",
			"  void onEnable() {}",
			"}",
			"",
			"class ${1:MyEmbed}Settings extends EmbedSettings<${1:MyEmbed}> {",
			"  bool condition;",
			"",
			"  ${1:MyEmbed}Settings({required this.condition});",
			"",
			"  @override",
			"  EmbedSettingsForm<EmbedSettings<Embed>> createForm(",
			"    covariant ${1:MyEmbed}Settings defaultSettings,",
			"  ) =>",
			"      ${1:MyEmbed}SettingsForm(",
			"        parentSettings: this,",
			"        defaultSettings: defaultSettings,",
			"      );",
			"",
			"  @override",
			"  String serialize() {",
			"    final Map<String, dynamic> map = {",
			"      \"condition\": condition,",
			"    };",
			"    return json.encode(map);",
			"  }",
			"",
			"  @override",
			"  void deserialize(String serialized) {",
			"    final Map<String, dynamic> map = json.decode(serialized);",
			"",
			"    condition = map[\"condition\"];",
			"  }",
			"}",
			"",
			"class ${1:MyEmbed}SettingsForm extends EmbedSettingsForm<${1:MyEmbed}Settings> {",
			"  ${1:MyEmbed}SettingsForm({",
			"    required super.parentSettings,",
			"    required super.defaultSettings,",
			"  });",
			"",
			"  @override",
			"  Widget build(BuildContext context) {",
			"    return Column(",
			"      children: [",
			"        SettingsSwitchFormField(",
			"          initialValue: parentSettings.condition,",
			"          titleText: \"Condition\",",
			"          onSaved: (newValue) => parentSettings.condition = newValue!,",
			"        ),",
			"      ],",
			"    );",
			"  }",
			"",
			"  @override",
			"  String get displayName => \"${2:My Embed}\";",
			"",
			"  @override",
			"  Color get displayColor => ${3:Colors.white};",
			"}",
		]
	}
}
